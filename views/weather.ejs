<!DOCTYPE html>
<html lang="en">

  <% include head.ejs %>

  <body>

    <div class="currentWeather">
      <div id="condition-svg"></div>
      <h3 id="condition-text"><!-- condition goes here --></h3>
      <h1 id="temp"><!-- temperature goes here --></h1>
      <h2 id="city"><!-- city goes here --></h2>
    </div>

    <div class="forecast">
      <h2>Forecast</h2>
      <ul></ul>
    </div>

    <ul class="notifications"></ul>

    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">

      var socket = io.connect('http://localhost:3000/');
      var svg = document.getElementById('condition-svg');
      var conditionText = document.getElementById('condition-text');
      var temp = document.getElementById('temp');
      var city = document.getElementById('city');
      var forecast = document.querySelector('.forecast > ul');
      var notifications = document.querySelector('.notifications');

      socket.on('update', function (user) {

        var curTemp = user.weather.condition.temp;

        svg.innerHTML = user.weather.svg;
        conditionText.textContent = user.weather.condition.text;
        temp.innerHTML = `${curTemp}&deg;${user.weather.units.temperature}`;
        city.textContent = user.weather.location.city;

        var condition;

        if (curTemp < 5) {
          condition = 'cold';
        } else if (curTemp >= 5 && curTemp < 10) {
          condition = 'chilly';
        } else if (curTemp >= 10 && curTemp < 15) {
          condition = 'medium';
        } else if (curTemp >= 15 && curTemp < 30) {
          condition = 'warm';
        } else if (curTemp >= 30) {
          condition = 'hot';
        }

        var bg = 'linear-gradient(-45deg,' +
          'var(--color-temp-' + condition + '),' +
          'var(--color-temp-' + condition + '-2),' +
          'var(--color-temp-' + condition + '-3))';

        document.body.style.background = bg;
        document.body.style.backgroundSize = '300% 300%';

        user.weather.forecast.forEach(function (date) {

          var li = document.createElement('li');
          var svg = document.createElement('svg');
          var h3s = [];

          for (var i = 0; i < 3; i++) {
            var h3 = document.createElement('h3');
            h3s.push(h3);
          }

          svg.innerHTML = date.svg;

          h3s[0].textContent = date.date;
          h3s[1].innerHTML = `${date.high}&deg;${user.weather.units.temperature}`;
          h3s[2].innerHTML = `${date.low}&deg;${user.weather.units.temperature}`;

          li.appendChild(svg);
          li.appendChild(h3s[0]);
          li.appendChild(h3s[1]);
          li.appendChild(h3s[2]);

          forecast.appendChild(li);

        });

      });

      var createNotification = function (text) {
        var li = document.createElement('li');
        var h3 = document.createElement('h3');

        h3.innerHTML = text;

        li.appendChild(h3);
        notifications.appendChild(li);

        setTimeout(function () {
          li.classList.add('show');
        }, 500);

        setTimeout(function () {
          li.classList.remove('show');
        }, 10800);

        setTimeout(function () {
          notifications.removeChild(li);
        }, 11100);
      }

      socket.on('users-history', function (user) {
        var text = `${user.name} is in ${user.weather.location.city}: ${user.weather.condition.temp}&deg;`;
        createNotification(text);
      });

      socket.on('user-login', function (user) {
        var text = `${user.name} connected in ${user.city}`;
        createNotification(text);
      });

      socket.on('user-logout', function (user) {
        var text = `${user.name} disconnected`;
        createNotification(text);
      });

    </script>

  </body>
</html>
